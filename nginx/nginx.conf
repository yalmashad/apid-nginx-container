# nginx/nginx.conf
# Docker-optimized configuration (logs streamed to stdout/stderr)

worker_processes auto;

error_log /dev/stderr info;
pid /var/run/nginx.pid;

load_module /usr/lib/nginx/modules/ngx_http_js_module.so;

events {
    worker_connections 1024;
}

http {
    js_path "/etc/nginx/";
    js_import main from api_discovery.js;

    # Declare variables used by NJS
    js_var $resp_body_buffer;
    js_var $log_transaction;
    js_var $custom_header_value;
    js_var $sample_rate;

    # Log format (same as original, now printed to stdout)
    log_format obelixfwd escape=json
    '{ "time":"$time_iso8601",'
    '  "server":"$server_name",'
    '  "uri":"$request_uri",'
    '  "method":"$request_method",'
    '  "status":$status,'
    '  "token":"$http_x_volterra_apisec_auth_token",'
    '  "body":"$request_body" }';

    upstream backend_service { server 127.0.0.1:8000; }
    upstream obelix { server obelix:18093; }

    server {
        listen 18082;
        server_name localhost;
        client_body_in_single_buffer on;

        location /public-api/ {
            set $token "fake-token-123";
            set $sample_rate "1";
            js_header_filter main.header_filter;
            js_body_filter   main.body_filter;
            proxy_set_header Accept-Encoding "";
            proxy_pass http://backend_service;
        }

        location = /send_log_F5 {
            internal;
            proxy_pass http://127.0.0.1:18080/logs/third_party_application/access;
            proxy_set_header Content-Type "application/json";
            proxy_set_header x-volterra-apisec-auth-token $token;
        }
    }

    server {
        listen 18080;
        server_name 127.0.0.1;
        access_log /dev/stdout obelixfwd;
        error_log  /dev/stderr;

        location /logs/third_party_application/access {
            access_log /dev/stdout obelixfwd;
            proxy_pass http://obelix;
            proxy_set_header Content-Type "application/json";
            proxy_set_header x-volterra-apisec-auth-token $http_x_volterra_apisec_auth_token;
            proxy_set_header Connection "";
            proxy_http_version 1.1;
        }
    }

    server {
        listen 8000;
        default_type application/json;
        location / {
            return 200 '{"message": "Hello from the backend!"}';
        }
    }
}

